# Name of the workflow
name: Build

# Controls what will trigger the workflow.
# Change it if you need.
on:
  # A new push to the “main” branch.
  push:
    branches: [ "main" ]
  # A new pull request to the “main” branch.
  pull_request:
    branches: [ "main" ]
  # Allows to trigger the workflow from GitHub interfaces.
  workflow_dispatch:

# A single workflow can have multiple jobs.
jobs:
  # ‘A new job is defined with the name: “build”
  build:
    # Defines what operating system will be used for the actions.
    # For android, we will use linux GitHub-Hosted Runner.
    runs-on: ubuntu-22.04
    # Defines what step should be passed for successful run
    steps:
      # Checkout to the selected branch
      - uses: actions/checkout@v3
      # Download and install java
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "11.0"
          cache: 'gradle'
      # Download and install flutter packages
      - uses: subosito/flutter-action@v2
        with:
          # Define which stable flutter version should be used
          flutter-version: "3.3.10"
          channel: 'stable'
          cache: true
      # Get Flutter project dependencies
      - name: Get dependencies
        run: flutter pub get
      # Build Android App Bundle
      - name: Start release build
        run: flutter build appbundle
      # Sign the app bundle
	    # - name: Sign App Bundle
      #   uses: r0adkll/sign-android-release@v1
      #   id: sign_app
      #   with:
      #     releaseDirectory: build/app/outputs/bundle/westRelease/
      #     signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_FILE_BASE64 }}
      #     alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
      #     keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      #     keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
      # # Upload the app bundle to Play Store 
	    # - name: Upload app bundle to Play Store
      #   uses: r0adkll/upload-google-play@v1.0.18
      #   with:
      #     serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}
      #     packageName: com.pingnpay.flutterapp
      #     releaseFiles: ${{steps.sign_app.outputs.signedReleaseFile}}
      #     mappingFile: build/app/outputs/mapping/westRelease/mapping.txt
      #     track: internal